name: Measure Python & MATLAB Code Coverage
env:
  CLONE_PATH: ${{ github.workspace }}
  PY_COV_FILE: coverage_ibcdfo
  PY_COV_XML_FILE: cobertura_ibcdfo_py.xml
  PY_COV_HTML_FILE: htmlcov_ibcdfo_py
  M_COV_XML_FILE: cobertura_ibcdfo_m.xml
  M_COV_HTML_FILE: htmlcov_ibcdfo_m
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - develop

jobs:
  # ----- MEASURE COVERAGE ACROSS ALL PYTHON PACKAGES
  coverage_py:
    runs-on: ${{ matrix.os }}
    strategy:
      # We only need to measure coverage with a single python version.  Ideally
      # this will be the latest version of python supported.
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.12"]
    steps:
      # -- General Setup Steps
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Python with tox
        run: $CLONE_PATH/.github/workflows/setup_tox_github_action.sh

      # -- Run Coverage for All Python Packages
      - name: Generate Python coverage reports
        run: |
          pushd $CLONE_PATH/ibcdfo_pypkg
          COVERAGE_FILE=$PY_COV_FILE COVERAGE_XML_FILE=$PY_COV_XML_FILE COVERAGE_HTML_FILE=$PY_COV_HTML_FILE tox -r -e coverage,report
          mv $PY_COV_FILE $CLONE_PATH
          mv $PY_COV_XML_FILE $CLONE_PATH
          mv $PY_COV_HTML_FILE $CLONE_PATH
          popd

      # -- Publish as artifact for users and subsequent jobs
      - name: Archive Python coverage results
        uses: actions/upload-artifact@v4
        with:
          name: python-coverage-results
          path: |
             ${{ env.PY_COV_FILE }}
             ${{ env.PY_COV_XML_FILE }}
             ${{ env.PY_COV_HTML_FILE }}

  # ----- MEASURE COVERAGE ACROSS ALL MATLAB PACKAGES
  coverage_m:
    runs-on: ${{ matrix.os }}
    strategy:
      # We only need to measure coverage with a single MATLAB release.  Ideally
      # this will be the latest MATLAB release supported.
      matrix:
        os: [ubuntu-latest]
        matlab-release: ["R2024a"]
    steps:
      # -- General Setup Steps
      # Nest BenDFO in IBCDFO.  I tried to have them side-by-side with IBCDFO
      # installed in a nonstandard path, but that caused failures with CodeCov.
      - name: Checkout IBCDFO repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Checkout BenDFO repository
        uses: actions/checkout@v4
        with:
          repository: POptUS/BenDFO
          path: BenDFO
      - name: Set up MATLAB ${{ matrix.matlab-release }}
        uses: matlab-actions/setup-matlab@v2
        with:
          release: ${{ matrix.matlab-release }}

      # -- Test Execution Step
      # This requires R2023b or higher
      - name: Generate code coverage report for MATLAB code
        uses: matlab-actions/run-command@v2
        with:
          command: >
              addpath("BenDFO/data"),
              addpath("BenDFO/m"),
              cd pounders/m,
              [results, cov] = runtests("IncludeSubfolders", true, "ReportCoverageFor", pwd),
              assertSuccess(results),
              cd ${{ env.CLONE_PATH }},
              fp = generateHTMLReport(cov, "${{ env.M_COV_HTML_FILE }}"),
              generateCoberturaReport(cov, "${{ env.M_COV_XML_FILE }}");

      # -- Publish as artifact for users and subsequent jobs
      - name: Archive MATLAB coverage results
        uses: actions/upload-artifact@v4
        with:
          name: matlab-coverage-results
          path: |
             ${{ env.M_COV_XML_FILE }}
             ${{ env.M_COV_HTML_FILE }}

  # ----- PUBLISH FULL CODE COVERAGE REPORT
  publish:
    needs: [coverage_py, coverage_m]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Access Python coverage reports
        uses: actions/download-artifact@v4
        with:
          name: python-coverage-results
          path: ${{ env.CLONE_PATH }}

      - name: Access MATLAB coverage reports
        uses: actions/download-artifact@v4
        with:
          name: matlab-coverage-results
          path: ${{ env.CLONE_PATH }}
  
      - name: Generate Python coverage reports
        run: ls -lart $CLONE_PATH

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: cobertura_ibcdfo_m.xml
          fail_ci_if_error: true
