#
# This action could publish to the IBCDFO PyPI account the source distribution
# and universal wheel that it produces.  For more information on potential
# security issues associated with automatic publishing, please refer to
#
#        https://docs.pypi.org/trusted-publishers/security-model/
#
# In particular, there exists the possibility of breaking that page or allowing
# nefarious actors to alter it.  Since IBCDFO will likely be released only a few
# times a year, we presently prefer the conservative route of manually
# publishing to PyPI the distributions built and tested by this action.
#
# ALL CHANGES TO THIS ACTION SHOULD BE REVIEWED VERY CAREFULLY TO ENSURE THAT
#             THE CHANGES ARE AS INTENDED AND WELL UNDERSTOOD!
#

name: Build & test release candidate
env:
  BENDFO_DATA_PATH: ${{ github.workspace }}/BenDFO/data
  BENDFO_PY_PATH:   ${{ github.workspace }}/BenDFO/py
  MINQ5_PY_PATH:    ${{ github.workspace }}/minq/py/minq5
  IBCDFO_PKG:       ${{ github.workspace }}/ibcdfo_pypkg
  DIST_PATH:        ${{ github.workspace }}/ibcdfo_pypkg/dist

on:
  # This action is run only on main to produce release candidate distributions
  # and test each of these independently and thoroughly on a full set of test
  # setups.
  #
  # Significant but simpler testing is done on feature branches using the
  # test_python action.
  # TODO: Temporarily run on PR into main for testing.  Remove before this
  # is merged into main.
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types:    [published]

jobs:
  build:
    name: Build release candidate distributions
    runs-on: ubuntu-latest
    steps:
      # Clone the repository with the full history since setuptools-scm needs
      # the tags to set the correct version.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          # Ideally this will always use the newest Python version supported by
          # package
          python-version: 3.13
      - name: Construct sdist and wheel
        run: |
          # Install dependencies
          which python
          python -m pip install --upgrade pip
          python -m pip install build
          python -m pip list
          # Build both distributions
          pushd $IBCDFO_PKG
          python -m build
          popd
      - name: Archive both distributions
        uses: actions/upload-artifact@v4
        with:
          name: ibcdfo-release-candidate
          path: |
            ${{ env.DIST_PATH }}/ibcdfo-*.tar.gz
            ${{ env.DIST_PATH }}/ibcdfo-*-py3-none-any.whl

  test_sdist:
    name: Test source distribution
    needs: [build]
    strategy:
      matrix:
        # python-versions must be maintained consistent with associated
        # pyproject.toml and tox.ini configuration.
        os: [ubuntu-22.04, ubuntu-24.04, macos-13, macos-14, macos-15]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        exclude:
          # Failing with root cause not yet understood (Issue #168)
          - os: macos-14
            python-version: "3.9"
          - os: macos-15
            python-version: "3.9"
    runs-on: ${{ matrix.os }}
    steps:
      # Install MINQ at commit specified in current submodule setting rather
      # than installing as clone of actual MINQ repo.
      - name: Checkout IBCDFO repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Checkout BenDFO repository
        uses: actions/checkout@v4
        with:
          repository: POptUS/BenDFO
          path: BenDFO
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Obtain release candidate
        uses: actions/download-artifact@v4
        with:
          name: ibcdfo-release-candidate
          path: ${{ env.CLONE_PATH }}
      - name: Setup Python, install, & test
        run: |
          PYTHONPATH=$BENDFO_PY_PATH:$MINQ5_PY_PATH
          echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV
          which python
          python -m pip install --upgrade pip
          python -m pip install ibcdfo-*.tar.gz
          python -m pip list
          # Run from location that already has dfo.dat
          pushd $BENDFO_DATA_PATH
          python -c "import ibcdfo ; exit(not ibcdfo.test())"
          popd

  test_wheel:
    name: Test universal wheel
    needs: [build]
    strategy:
      matrix:
        # python-versions must be maintained consistent with associated
        # pyproject.toml and tox.ini configuration.
        os: [ubuntu-22.04, ubuntu-24.04, macos-13, macos-14, macos-15]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        exclude:
          # Failing with root cause not yet understood (Issue #168)
          - os: macos-14
            python-version: "3.9"
          - os: macos-15
            python-version: "3.9"
    runs-on: ${{ matrix.os }}
    steps:
      # Install MINQ at commit specified in current submodule setting rather
      # than installing as clone of actual MINQ repo.
      - name: Checkout IBCDFO repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Checkout BenDFO repository
        uses: actions/checkout@v4
        with:
          repository: POptUS/BenDFO
          path: BenDFO
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Obtain release candidate
        uses: actions/download-artifact@v4
        with:
          name: ibcdfo-release-candidate
          path: ${{ env.CLONE_PATH }}
      - name: Setup Python, install, & test
        run: |
          PYTHONPATH=$BENDFO_PY_PATH:$MINQ5_PY_PATH
          echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV
          which python
          python -m pip install --upgrade pip
          python -m pip install ibcdfo-*-py3-none-any.whl
          python -m pip list
          # Run from location that already has dfo.dat
          pushd $BENDFO_DATA_PATH
          python -c "import ibcdfo ; exit(not ibcdfo.test())"
          popd
